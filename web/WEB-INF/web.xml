<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">

  <welcome-file-list>
    <welcome-file>con/index.do</welcome-file>
  </welcome-file-list>

  <!-- 配置 spring IOC 容器配置文件路径 -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:applicationContext.xml</param-value>
  </context-param>

  <!-- 配置 ContextLoaderListener 用以初始化 IOC 容器 -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <!-- 配置 DispatcherServlet -->
  <servlet>
    <!-- 注意： 如果不指定 contextConfigLocation
              Spring MVC 框架会根据 servlet-name 配置，找到／WEB-INF/${servlet-name}-servlet.xml 作为配置文件载入 Web 工程中
               也可手动指定配置文件位置  <init-param> 中的 contextConfigLocation 来指定位置
     -->
    <servlet-name>dispatcherServlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:spring-mvc.xml</param-value>
    </init-param>
    <!-- 使得 Dispatcher 在服务器启动的时候就初始化 -->
    <load-on-startup>2</load-on-startup>
  </servlet>
  <!-- servlet 拦截配置 -->
  <servlet-mapping>
    <servlet-name>dispatcherServlet</servlet-name>
    <url-pattern>*.do</url-pattern>
  </servlet-mapping>

</web-app>
